/**
 * Vulnerability severity levels based on industry standards
 */
export enum VulnerabilitySeverity {
  CRITICAL = 'critical',
  HIGH = 'high',
  MEDIUM = 'medium',
  LOW = 'low',
  INFO = 'info'
}

/**
 * Common vulnerability categories for Solidity contracts
 */
export enum VulnerabilityCategory {
  REENTRANCY = 'reentrancy',
  INTEGER_OVERFLOW = 'integer-overflow',
  ACCESS_CONTROL = 'access-control',
  UNCHECKED_EXTERNAL_CALLS = 'unchecked-external-calls',
  DENIAL_OF_SERVICE = 'denial-of-service',
  TIMESTAMP_DEPENDENCE = 'timestamp-dependence',
  FRONT_RUNNING = 'front-running',
  LOGIC_ERROR = 'logic-error',
  GAS_OPTIMIZATION = 'gas-optimization',
  CODE_QUALITY = 'code-quality'
}

/**
 * Location information for vulnerability findings
 */
export interface VulnerabilityLocation {
  line: number
  column: number
  endLine?: number
  endColumn?: number
  function?: string
  contract?: string
}

/**
 * Individual vulnerability finding
 */
export interface Vulnerability {
  id: string
  title: string
  description: string
  severity: VulnerabilitySeverity
  category: VulnerabilityCategory
  location: VulnerabilityLocation
  codeSnippet?: string
  recommendation: string
  references?: string[]
  confidence: number // 0-100
  gasImpact?: {
    increase?: number
    optimization?: number
  }
}

/**
 * Vulnerability pattern for detection engine
 */
export interface VulnerabilityPattern {
  id: string
  name: string
  category: VulnerabilityCategory
  severity: VulnerabilitySeverity
  pattern: RegExp | string
  description: string
  recommendation: string
  enabled: boolean
  confidence: number
}

/**
 * Summary statistics for vulnerability analysis
 */
export interface VulnerabilitySummary {
  total: number
  critical: number
  high: number
  medium: number
  low: number
  info: number
  riskScore: number // 0-100
}
