import React from 'react'
import { Vulnerability, VulnerabilitySeverity, VulnerabilityCategory } from '@/types/vulnerability.types'
import { AlertTriangle, TrendingUp, CheckCircle } from 'lucide-react'

interface VulnerabilityListProps {
  vulnerabilities: Vulnerability[]
  className?: string
}

/**
 * Component for displaying a list of vulnerabilities
 */
const VulnerabilityList: React.FC<VulnerabilityListProps> = ({ vulnerabilities, className = '' }) => {
  /**
   * Get severity icon and color
   */
  const getSeverityDisplay = (severity: VulnerabilitySeverity) => {
    switch (severity) {
      case VulnerabilitySeverity.CRITICAL:
        return {
          icon: AlertTriangle,
          color: 'text-red-400',
          bgColor: 'bg-red-50 border-red-200',
          label: 'Critical'
        }
      case VulnerabilitySeverity.HIGH:
        return {
          icon: AlertTriangle,
          color: 'text-orange-400',
          bgColor: 'bg-orange-50 border-orange-200',
          label: 'High'
        }
      case VulnerabilitySeverity.MEDIUM:
        return {
          icon: TrendingUp,
          color: 'text-yellow-400',
          bgColor: 'bg-yellow-50 border-yellow-200',
          label: 'Medium'
        }
      case VulnerabilitySeverity.LOW:
        return {
          icon: TrendingUp,
          color: 'text-blue-400',
          bgColor: 'bg-blue-50 border-blue-200',
          label: 'Low'
        }
      default:
        return {
          icon: CheckCircle,
          color: 'text-green-400',
          bgColor: 'bg-green-50 border-green-200',
          label: 'Info'
        }
    }
  }

  /**
   * Get category display name
   */
  const getCategoryDisplay = (category: VulnerabilityCategory) => {
    return category.replace('-', ' ').replace(/\b\w/g, l => l.toUpperCase())
  }

  if (vulnerabilities.length === 0) {
    return (
      <div className={`flex flex-col items-center justify-center h-full text-center p-8 ${className}`}>
        <CheckCircle className="h-16 w-16 text-green-400 mb-4" />
        <h3 className="text-lg font-semibold mb-2">No Vulnerabilities Found</h3>
        <p className="text-muted-foreground">
          Great! Your smart contract passed all security checks.
        </p>
      </div>
    )
  }

  return (
    <div className={`space-y-4 overflow-y-auto ${className}`}>
      {vulnerabilities.map((vulnerability, index) => {
        const severityDisplay = getSeverityDisplay(vulnerability.severity)
        const SeverityIcon = severityDisplay.icon

        return (
          <div
            key={vulnerability.id}
            className={`p-4 rounded-lg border ${severityDisplay.bgColor} ${className}`}
          >
            {/* Header */}
            <div className="flex items-start justify-between mb-3">
              <div className="flex items-center gap-2">
                <SeverityIcon className={`h-5 w-5 ${severityDisplay.color}`} />
                <h4 className="font-semibold">{vulnerability.title}</h4>
              </div>
              <div className="flex items-center gap-2">
                <span className={`px-2 py-1 text-xs font-medium rounded-full ${severityDisplay.color} bg-opacity-10`}>
                  {severityDisplay.label}
                </span>
                <span className="text-sm text-muted-foreground">
                  #{index + 1}
                </span>
              </div>
            </div>

            {/* Description */}
            <p className="text-sm text-muted-foreground mb-3">
              {vulnerability.description}
            </p>

            {/* Metadata */}
            <div className="flex flex-wrap gap-4 text-sm text-muted-foreground mb-3">
              <div className="flex items-center gap-1">
                <span className="font-medium">Category:</span>
                <span>{getCategoryDisplay(vulnerability.category)}</span>
              </div>
              <div className="flex items-center gap-1">
                <span className="font-medium">Confidence:</span>
                <span>{vulnerability.confidence}%</span>
              </div>
              {vulnerability.location.line && (
                <div className="flex items-center gap-1">
                  <span className="font-medium">Line:</span>
                  <span>{vulnerability.location.line}</span>
                </div>
              )}
            </div>

            {/* Code snippet */}
            {vulnerability.codeSnippet && (
              <div className="mb-3">
                <div className="text-xs font-medium text-muted-foreground mb-1">Code:</div>
                <pre className="bg-muted p-3 rounded text-sm overflow-x-auto">
                  <code>{vulnerability.codeSnippet}</code>
                </pre>
              </div>
            )}

            {/* Recommendation */}
            <div className="mb-3">
              <div className="text-xs font-medium text-muted-foreground mb-1">Recommendation:</div>
              <p className="text-sm">{vulnerability.recommendation}</p>
            </div>

            {/* References */}
            {vulnerability.references && vulnerability.references.length > 0 && (
              <div>
                <div className="text-xs font-medium text-muted-foreground mb-1">References:</div>
                <div className="flex flex-wrap gap-1">
                  {vulnerability.references.map((ref, refIndex) => (
                    <a
                      key={refIndex}
                      href={ref}
                      target="_blank"
                      rel="noopener noreferrer"
                      className="text-xs text-blue-600 hover:text-blue-800 underline"
                    >
                      {ref}
                    </a>
                  ))}
                </div>
              </div>
            )}
          </div>
        )
      })}
    </div>
  )
}

export default VulnerabilityList
